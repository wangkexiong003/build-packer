name: Build vagrant images with hyperv provider
on:
  workflow_dispatch:
  workflow_call:

env:
  PACKER_GITHUB_API_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

jobs:
  x86_64:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - archlinux
          - ubuntu-24.04
        provider:
          - hyperv-iso
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: latest
      - name: Install FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3
      - name: Update Hyper-V
        shell: pwsh
        run: |
          Get-PsDrive -PsProvider FileSystem
          Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False
          choco install vmwareworkstation --yes
          $iNET=(Get-NetAdapter | Where-Object { $_.InterfaceDescription -ilike "*vmnet8*" }).Name
          New-VMSwitch -Name "bento" -NetAdapterName $iNET -AllowManagementOS $true
      - name: Start Desktop Recording
        shell: pwsh
        run: |
          Set-DisplayResolution -Width 1920 -Height 1080 -Force
          Install-WindowsFeature -Name Hyper-V -IncludeManagementTools
          Start-Process powershell -ArgumentList '-File', .github\workflows\scripts\record.ps1 -WindowStyle Minimized
          Get-DisplayResolution
      - name: Packer Init
        run: packer init -upgrade packer_templates
      - name: Packer Build
        shell: pwsh
        continue-on-error: true
        env:
          HCP_CLIENT_ID:     ${{ secrets.HCP_CLIENT_ID }}
          HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
        run: |
          $provider = "${{ matrix.provider }}.vm"
          $varFile = "os_pkrvars/$("${{ matrix.os }}".Split('-')[0])/${{ matrix.os }}-x86_64.pkrvars.hcl"
          packer build -timestamp-ui -force -only="$provider" -var-file="$varFile" -var headless=false packer_templates
      - name: Stop Desktop Recording
        run: |
          del ffmpeg.pid
          sleep 5s
      - name: Upload build artifact
        uses: actions/upload-artifact@main
        with:
          name: "${{ matrix.os }}-hyperv-x86_64"
          path: |
            desktop_record*.mp4
          retention-days: 10
          compression-level: 0
